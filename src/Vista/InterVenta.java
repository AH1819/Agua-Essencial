package Vista;

import Conexion.Conexion;
import Modelo.Producto;
import java.awt.Dimension;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Erick
 */
public class InterVenta extends javax.swing.JInternalFrame {

    int obtenerIdCategoriaCombo = 0;

    public InterVenta() {
        initComponents();
        this.setSize(new Dimension(400, 392));
        this.setTitle("Nueva Compra");
        this.CargarCate();
        this.CargarPro();
        //this.idCategoria();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jComboBox_categoria = new javax.swing.JComboBox<>();
        jComboBox_producto = new javax.swing.JComboBox<>();
        txtcantidad = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel1.setText("Nueva Compra");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel2.setText("Categoria:");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel3.setText("Producto:");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel4.setText("Cantidad:");

        jComboBox_categoria.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccionar Categoria:", "Item 2", "Item 3", "Item 4" }));

        jComboBox_producto.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccionar Producto:", "Item 2", "Item 3", "Item 4" }));
        jComboBox_producto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox_productoActionPerformed(evt);
            }
        });

        jButton1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jButton1.setText("Comprar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4))
                        .addGap(65, 65, 65)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jComboBox_categoria, 0, 160, Short.MAX_VALUE)
                            .addComponent(jComboBox_producto, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtcantidad)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(131, 131, 131)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton1)
                            .addComponent(jLabel1))))
                .addGap(87, 87, 87))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jComboBox_categoria))
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jComboBox_producto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtcantidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(47, 47, 47)
                .addComponent(jButton1)
                .addGap(31, 31, 31))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jComboBox_productoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox_productoActionPerformed

    }//GEN-LAST:event_jComboBox_productoActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if (txtcantidad.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Rellene los campos solicitados");
        } else {
        }

    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JComboBox<String> jComboBox_categoria;
    private javax.swing.JComboBox<String> jComboBox_producto;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JTextField txtcantidad;
    // End of variables declaration//GEN-END:variables

    private void CargarCate() {
        Connection con = Conexion.conectar();
        String sql = "select *from categoria";
        Statement st;

        try {
            st = con.createStatement();
            ResultSet rs = st.executeQuery(sql);
            jComboBox_categoria.removeAllItems();
            jComboBox_categoria.addItem("Seleccione categoria:");

            while (rs.next()) {
                jComboBox_categoria.addItem(rs.getString("descripcion"));
            }

            con.close();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error al cargar categorias", "Mensaje", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void CargarPro() {
        int precio=0;
        Connection con = Conexion.conectar();
        //DefaultTableModel model = new DefaultTableModel();
        //DefaultTableModel model = (DefaultTableModel) this.tableproducto.getModel();

        String sql = "select * from producto" /*where idCategoria= " + obtenerIdCategoriaCombo + ";"*/;
        Statement st;

        try {
            st = con.createStatement();
            ResultSet rs = st.executeQuery(sql);
            jComboBox_producto.removeAllItems();
            jComboBox_producto.addItem("Seleccione producto:");
            while (rs.next()) {

                jComboBox_producto.addItem(rs.getString("nombre"));

            }
            con.close();
        } catch (Exception e) {
            System.out.println("Error al llenar tabla" + e);
            JOptionPane.showMessageDialog(null, "Error al llenar la tabla" + e, "Mensaje", JOptionPane.ERROR_MESSAGE);
        }

    }

//    private void CargarPro() {
//        Connection con = Conexion.conectar();
//        String sql = "select * from producto where idCategoria= " + obtenerIdCategoriaCombo + ";";
//        Statement st;
//        //String categ="";
//
//        try {
//            st = con.createStatement();
//            ResultSet rs = st.executeQuery(sql);
//            jComboBox_producto.removeAllItems();
//            jComboBox_producto.addItem("Seleccione producto:");
//
//            while (rs.next()) {
//                jComboBox_producto.addItem(rs.getString("nombre"));
//                //Producto producto = new Producto();
//                
//                /*this.idCategoria();
//                producto.setIdCategoria(obtenerIdCategoriaCombo);
//                producto.setEstado(1);*/
//            }
//
//            con.close();
//        } catch (Exception e) {
//            JOptionPane.showMessageDialog(null, "Error al cargar productos", "Mensaje", JOptionPane.ERROR_MESSAGE);
//        }
//
//    }
    private int idCategoria() {
        String sql = "select * from categoria where descripcion='" + this.jComboBox_categoria.getSelectedItem() + "'";
        Statement st;
        try {
            Connection con = Conexion.conectar();
            st = con.createStatement();
            ResultSet rs = st.executeQuery(sql);

            while (rs.next()) {
                obtenerIdCategoriaCombo = rs.getInt("idCategoria");
                System.out.println(obtenerIdCategoriaCombo);
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error al obtener el ID de la categoria", "Mensaje", JOptionPane.ERROR_MESSAGE);
        }
        return obtenerIdCategoriaCombo;
    }

}
